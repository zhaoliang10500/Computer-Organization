	.text
	.equ LED_SEG1, 0xFF200020
	.equ LED_SEG2, 0xFF200030
	.global HEX_clear_ASM
	.global HEX_flood_ASM
	.global HEX_write_ASM

HEX_clear_ASM:
			PUSH {R4-R6}
			LDR R5, =LED_SEG1	//init address
			LDR R6, =LED_SEG2
			LDR R1, [R5]
			LDR R2, [R6]

			SUBS R4, R0, #0x20
			BGE HEX5_C
	
CONT5_C:		SUBS R4, R0, #0b10000
			BGE HEX4_C

CONT4_C:		SUBS R4, R0, #0b1000
			BGE HEX3_C

CONT3_C:		SUBS R4, R0, #0b100
			BGE HEX2_C
		
CONT2_C:		SUBS R4, R0, #0b10
			BGE HEX1_C

CONT1_C:		SUBS R4, R0, #0b1
			BGE HEX0_C
			POP {R4-R6}
			BX LR

HEX0_C:	MOV R3, #0b11111111111111111111111100000000
		SUB R0, R0, #0b1
		AND R1, R1, R3
		STR R1, [R5]
		POP {R4-R6}
		BX LR

HEX1_C:	MOV R3, #0b11111111111111110000000011111111
		SUB R0, R0, #0b10
		AND R1, R1, R3
		STR R1, [R5]
		B CONT1_C

HEX2_C:	MOV R3, #0b11111111000000001111111111111111
		SUB R0, R0, #0b100
		AND R1, R1, R3
		STR R1, [R5]
		B CONT2_C

HEX3_C:	MOV R3, #0b00000000111111111111111111111111
		SUB R0, R0, #0b1000
		AND R1, R1, R3
		STR R1, [R5]
		B CONT3_C

HEX4_C:	MOV R3, #0b11111111111111111111111100000000
		SUB R0, R0, #0b10000
		AND R2, R2, R3
		STR R2, [R6]
		B CONT4_C

HEX5_C:	MOV R3, #0b11111111111111110000000011111111 
		SUB R0, R0, #0b100000
		AND R2, R2, R3	
		STR R2, [R6]
		B CONT5_C


HEX_flood_ASM:
			PUSH {R4-R6}
			LDR R5, =LED_SEG1	//init address
			LDR R6, =LED_SEG2
			LDR R1, [R5]
			LDR R2, [R6]

			SUBS R4, R0, #0x20
			BGE HEX5_F
	
CONT5_F:		SUBS R4, R0, #0b10000
			BGE HEX4_F

CONT4_F:		SUBS R4, R0, #0b1000
			BGE HEX3_F

CONT3_F:		SUBS R4, R0, #0b100
			BGE HEX2_F
		
CONT2_F:		SUBS R4, R0, #0b10
			BGE HEX1_F

CONT1_F:		SUBS R4, R0, #0b1
			BGE HEX0_F
			POP {R4-R6}
			BX LR

HEX0_F:	MOV R3, #0b00000000000000000000000011111111
		SUB R0, R0, #0b1
		ORR R1, R1, R3
		STR R1, [R5]
		POP {R4-R6}
		BX LR

HEX1_F:	MOV R3, #0b00000000000000001111111100000000
		SUB R0, R0, #0b10
		ORR R1, R1, R3
		STR R1, [R5]
		B CONT1_F

HEX2_F:	MOV R3, #0b00000000111111110000000000000000
		SUB R0, R0, #0b100
		ORR R1, R1, R3
		STR R1, [R5]
		B CONT2_F

HEX3_F:	MOV R3, #0b11111111000000000000000000000000
		SUB R0, R0, #0b1000
		ORR R1, R1, R3
		STR R1, [R5]
		B CONT3_F

HEX4_F:	MOV R3, #0b00000000000000000000000011111111
		SUB R0, R0, #0b10000
		ORR R2, R2, R3
		STR R2, [R6]
		B CONT4_F

HEX5_F:	MOV R3, #0b00000000000000001111111100000000 
		SUB R0, R0, #0b100000
		ORR R2, R2, R3	
		STR R2, [R6]
		B CONT5_F
				
HEX_write_ASM:
			//R0, HEX, R1 val
			PUSH {R4-R7}
			LDR R5, =LED_SEG1	//init address
			LDR R6, =LED_SEG2
			LDR R2, [R5]
			LDR R3, [R6]

			MOV R7, #0b00111110 //DEFAULT U: indicates error
			CMP R1, #0
			MOVEQ R7, #0b00111111
			
			CMP R1, #1
			MOVEQ R7, #0b00000110
			
//0:00111111/1:00000110/2:01011011/3:01001111
//4:01100110/5:01101001/6:01111101/7:00000111
//8:01111111/9:01100111/a:01110111/B:01111100
//C:00111001/D:01011110/E:01111001/F:01110001	
			
			
			CMP R1, #2
			MOVEQ R7, #0b01011011
			
			CMP R1, #3
			MOVEQ R7, #0b01001111

			CMP R1, #4
			MOVEQ R7, #0b01100110

			CMP R1, #5
			MOVEQ R7, #0b01101101

			CMP R1, #6
			MOVEQ R7, #0b01111101

			CMP R1, #7
			MOVEQ R7, #0b00000111

			CMP R1, #8
			MOVEQ R7, #0b01111111

			CMP R1, #9
			MOVEQ R7, #0b01101111

			CMP R1, #10
			MOVEQ R7, #0b01110111

			CMP R1, #11
			MOVEQ R7, #0b01111100

			CMP R1, #12
			MOVEQ R7, #0b00111001

			CMP R1, #13
			MOVEQ R7, #0b01011110

			CMP R1, #14
			MOVEQ R7, #0b01111001

			CMP R1, #15
			MOVEQ R7, #0b01110001

				MOV R8, R7
			
						
				SUBS R4, R0, #0x20
				MOV R7, R8
				BGE HEX5_W
	
CONT5_W:		SUBS R4, R0, #0b10000
				MOV R7, R8
				BGE HEX4_W

CONT4_W:		SUBS R4, R0, #0b1000
				MOV R7, R8
				BGE HEX3_W

CONT3_W:		SUBS R4, R0, #0b100
				MOV R7, R8
				BGE HEX2_W
		
CONT2_W:		SUBS R4, R0, #0b10
				MOV R7, R8
				BGE HEX1_W

CONT1_W:		SUBS R4, R0, #0b1
				MOV R7, R8
				BGE HEX0_W
				POP {R4-R7}
				BX LR


HEX0_W:	
		MOV R4, #0b11111111111111111111111100000000
		SUB R0, R0, #0b1
		AND R2, R2, R4
		ORR R2, R2, R7
		STR R2, [R5]
		POP {R4-R7}
		BX LR

HEX1_W:	MOV R4, #0b11111111111111110000000011111111
		SUB R0, R0, #0b10
		AND R2, R2, R4
		LSL R7, R7, #8
		ORR R2, R2, R7
		STR R2, [R5]
		B CONT1_W

HEX2_W:	MOV R4, #0b11111111000000001111111111111111
		SUB R0, R0, #0b100
		AND R2, R2, R4
		LSL R7, R7, #16
		ORR R2, R2, R7
		STR R2, [R5]
		B CONT2_W

HEX3_W:	MOV R4, #0b00000000111111111111111111111111
		SUB R0, R0, #0b1000
		AND R2, R2, R4
		LSL R7, R7, #24
		ORR R2, R2, R7 
		STR R2, [R5]
		B CONT3_W

HEX4_W:	MOV R4, #0b11111111111111111111111100000000
		SUB R0, R0, #0b10000
		AND R3, R3, R4
		ORR R3, R3, R7
		STR R3, [R6]
		B CONT4_W

HEX5_W:	MOV R4, #0b11111111111111110000000011111111 
		SUB R0, R0, #0b100000
		AND R3, R3, R4
		LSL R7, R7, #8
		ORR R3, R3, R7
		
		STR R3, [R6]
		B CONT5_W	

		POP {R4-R7}
		BX LR
	
	.end
